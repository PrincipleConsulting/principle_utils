# .github/workflows/publish.yml
name: Publish to pub.dev

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]
    branches:
      - release

jobs:
  pr_checks:
    # Run this job only if the PR is not closed yet.
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Install Dependencies
        run: flutter pub get
      - name: Format
        run: dart format --output=none --set-exit-if-changed .
      - name: Analyze
        run: flutter analyze
      - name: Test
        run: flutter test
      - name: Publish Dry Run
        run:  dart pub publish --dry-run

  publish:
    # Run this job only when the PR is closed AND merged.
    if: github.event.action == 'closed' && github.event.pull_request.merged == true
    environment: pub.dev
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for OIDC authentication
    steps:
      # Checkout repository
      - uses: actions/checkout@v4
      # Set up the Dart SDK and provision the OIDC token used for publishing.
      # The `dart` command from this step will be shadowed by the one from the
      # Flutter SDK below. 
      - uses: dart-lang/setup-dart@e630b99d28a3b71860378cafdc2a067c71107f94
      # Download flutter SDK - needed for publishing Flutter packages. Can also
      # publish pure Dart packages.
      #
      # The dart binary from a Flutter SDK facilitates publishing both Flutter
      # and pure-dart packages.
      - uses: flutter-actions/setup-flutter@54feb1e258158303e041b9eaf89314dcfbf6d38a
      # Minimal package setup and dry run checks.
      - name: Install dependencies
        run: dart pub get
      # Publishing...
      - name: Publish to pub.dev
        run: dart pub publish --server=https://pub.dartlang.org --force
